<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <!--
    自动代理类，就是一个后处理bean
    -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>-->

    <!--
    能不能自己实现一个类似的后处理bean呢？
    -->

    <bean class="com.pingan.myspring.aop.MyBeanPostProcessListenerPersonCreate"/>

    <!--
    一个事务里面包含切点和切面
    -->
    <bean id="advisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="patterns">
            <list>
                <value>.*run.*</value>
                <value>.*say.*</value>
            </list>
        </property>
        <property name="advice" ref="around"></property>
    </bean>
    <!--定义通知类-->
    <bean id="around" class="com.pingan.myspring.aop.AroundAdvice"/>
    <bean id="before" class="com.pingan.myspring.aop.MyBeforeAdvice"/>
    <bean id="after" class="com.pingan.myspring.aop.MyAfterAdvice"/>

    <bean id="person" class="com.pingan.myspring.aop.Person"/>
</beans>
